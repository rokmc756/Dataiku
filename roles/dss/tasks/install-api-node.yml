- name: Create Directory for Dataiku DSS API Node
  file:
    path: "{{ api.data_path }}"
    state: directory
    owner: jomoon
    group: jomoon
    mode: 0755
  register: create_data_dir
- debug: msg={{ create_data_dir }}
  when: print_debug == true


- name: Install Dataiku DSS API Node
  become_user: "{{ dss.user }}"
  shell: |
    dataiku-dss-{{ dss.major_version }}.{{ dss.minor_version }}.{{ dss.patch_version }}/installer.sh -t api -d {{ api.data_path }} -p {{ api.port }} # -l LICENSE_FILE]
  register: install_dss_api_node
  args:
    chdir: "{{ dss.base_path }}"
- debug: msg={{ install_dss_api_node }}
  when: print_debug == true


- name: Enable Startup Dataiku DSS API Node At Boot Time
  shell: |
    dataiku-dss-{{ dss.major_version }}.{{ dss.minor_version }}.{{ dss.patch_version }}/scripts/install/install-boot.sh {{ api.data_path }} {{ dss.user }}
  register: enable_startup_dss_api_node
  args:
    chdir: "{{ dss.base_path }}"
- debug: msg={{ enable_startup_dss_api_node }}
  when: print_debug == true


- name: Enable and Start Systemd Service for Dataiku DSS API Node
  systemd:
    daemon_reload: yes
    name: dataiku
    enabled: yes
    state: started
  register: enable_api_node_systemd_service
- debug: msg={{ enable_api_node_systemd_service }}
  when: print_debug == true


# - name: Start Dataiku DSS API Node Manually
#  become_user: "{{ dss.user }}"
#  shell: |
#    bin/dss start
#  register: start_dss_api_node
#  args:
#    chdir: "{{ api.data_path }}"
#- debug: msg={{ start_dss_api_node }}
#  when: print_debug == true

